#!/bin/bash

die() {
    printf "\33[2K\r\033[1;31m%s\033[0m\n" "$*" >&2
    exit 1
}

function cursorBack() {
  echo -en "\033[$1D"
  # Mac compatible, but goes back to first column always. See comments
  #echo -en "\r"
}

function spinner() {
    local LC_CTYPE=C

    local spin='⣾⣽⣻⢿⡿⣟⣯⣷'
    local charwidth=3

    local i=0
    while true; do
        local i=$(((i + $charwidth) % ${#spin}))
        printf "\r%s  %s" "${spin:$i:$charwidth}" "$1"

        # cursorBack 1
        sleep .1
    done

}

filename_no_extension() {
    echo "${name%%.*}"
}

extension() {
    if [[ "$1" != *.* ]]; then
        echo ""
        return
    fi

    echo "${1#*.}"
}

show_spinner() {
    spinner "$1" &
    tput civis # cursor invisible
    trap stop_spinner EXIT
    spinner_pid=$!
}

stop_spinner() {
    kill $spinner_pid 2> /dev/null
    printf "\r\033[K"
    tput cnorm
}

gh_install() {
    repo=$1

    show_spinner "Fetching releases from github"
    res=$(gh api \
        -H "Accept: application/vnd.github+json" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        /repos/charmbracelet/gum/releases/latest | jq '.assets | map({name, browser_download_url})')
    stop_spinner

    name=$(echo "$res" | jq -r '[.[] | select(.name | test("Linux"; "i"))] | sort_by(if(.name | test("x86_64")) then -1 else 1 end ) | .[].name' | pick_one)

    if [[ -z "$name" ]]; then
        return
    fi

   download_url=$(echo "$res" | jq -r --arg name "$name" '.[] | select(.name == $name) | .browser_download_url')
   echo "$download_url"

   case "$(extension $name)" in
       "")
           # download_binary $download_url
           ;;
       tar.gz)
           echo "tar-gz"
           ;;
       deb)
           echo "deb-gz"
           ;;
       *)
           echo "i don know"
           ;;
   esac
}

download_binary() {
   download_url="$1"
   sudo wget "$download_url" -O "$dir" -o /dev/null &
   chown +x "$dir"
}

file_install() {
    file=$1
}

pick_one() {
    fzf $1
}

dep_ch() {
    for dep in "$@"; do
        command -v "$dep" >/dev/null || die "program \"$dep\" not found. please install it."
    done
}

setup_jebuds() {
    ls ~/code/dotfiles | fzf  --bind space:toggle \
                                --border rounded \

}

# setup_jebuds
gh_install charmbracelet/gum
# gh_install justchokingaround/lobster
# gh_install nvm-sh/nvm
# gh_install mikefarah/yq

